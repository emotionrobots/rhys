/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef, useEffect } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'
import { useFrame } from 'react-three-fiber'
import { NotEqualStencilFunc } from 'three'

export default function Model(props) {

  const group = useRef()
  const { nodes, materials, animations } = useGLTF('/whiteGolfer.glb')
  const { actions } = useAnimations(animations, group)

  useEffect(() => {
    props.mapSliders(nodes.Mesh007.skeleton.bones)
  },[])

/*   useFrame((state, delta) => {
    props.getJoints().map((joint, index) => {
      nodes.Mesh007.skeleton.bones[index].rotation.x = joint.rotation.x;
      nodes.Mesh007.skeleton.bones[index].rotation.y = joint.rotation.y;
      nodes.Mesh007.skeleton.bones[index].rotation.z = joint.rotation.z;
    })
  }) */

/*   console.log(nodes.Mesh007)
  console.log(nodes.Mesh007_1)
  console.log(nodes.Mesh007_2.skeleton)

  for(var i=0; i<81; i++){
    console.table([i, nodes.Mesh007_2.skeleton.bones[i].name])
  } */
  
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Bip001" position={[-0.27, 2.32, 0.09]} rotation={[0, -1.55, 0.04]} scale={[0.03, 0.03, 0.03]}>
        <primitive object={nodes.Bip001_Pelvis} />
        <skinnedMesh
          geometry={nodes.Mesh007.geometry}
          material={materials['G_jersey.001']}
          skeleton={nodes.Mesh007.skeleton}
        />
        <skinnedMesh
          geometry={nodes.Mesh007_1.geometry}
          material={materials['G_pants.001']}
          skeleton={nodes.Mesh007_1.skeleton}
        />
        <skinnedMesh
          geometry={nodes.Mesh007_2.geometry}
          material={materials['G_arm.001']}
          skeleton={nodes.Mesh007_2.skeleton}
        />
        <skinnedMesh geometry={nodes.G_hat.geometry} material={materials['hat.001']} skeleton={nodes.G_hat.skeleton} />
        <skinnedMesh
          name="WH2"
          geometry={nodes.WH2.geometry}
          material={materials['head.001']}
          skeleton={nodes.WH2.skeleton}
          morphTargetDictionary={nodes.WH2.morphTargetDictionary}
          morphTargetInfluences={nodes.WH2.morphTargetInfluences}
        />
      </group>
    </group>
  )
}

useGLTF.preload('/whiteGolfer.glb')
